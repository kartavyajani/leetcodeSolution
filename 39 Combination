// approach use backstring 
with 5 parameter 
satrt the loop with the start wwala from back tracking and then remove the cnadidate 
class Solution {
    public List<List<Integer>> combinationSum(int[] candidates, int target) {
        List<List<Integer>> result=new ArrayList<>();
        backtrack(candidates,target,0,new ArrayList<>(),result);
        return result;
    }
    public static void backtrack(int[] candidates,int target ,int start,List<Integer> current ,List<List<Integer>> result){
        if(target==0){
            result.add(new ArrayList(current));
            return ;

        }
        for(int i=start;i<candidates.length;i++){
           if(candidates[i]>target){
            continue;
        
           } 
           current.add(candidates[i]);
              backtrack( candidates,target-candidates[i],i,current,result);
                current.remove(current.size() - 1);
        }

    }
}
