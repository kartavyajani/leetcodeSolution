class Solution {
    public boolean isValid(String s) {
        Stack<Character> stack=new Stack();
      
       for (char c : s.toCharArray()) {
            // If it's an opening bracket, push it onto the stack
            if (c == '(' || c == '{' || c == '[') {
                stack.push(c);
            }
            // If it's a closing bracket, check for matching opening bracket
            else if (c == ')' && !stack.isEmpty() && stack.peek() == '(') {
                stack.pop(); // Found a matching pair
            } else if (c == '}' && !stack.isEmpty() && stack.peek() == '{') {
                stack.pop(); // Found a matching pair
            } else if (c == ']' && !stack.isEmpty() && stack.peek() == '[') {
                stack.pop(); // Found a matching pair
            } else {
                return false; // No match found or stack is empty
            }
        }
        // If stack is empty, all brackets matched correctly
        return stack.isEmpty();
        
    }
}
